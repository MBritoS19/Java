/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package a08ex01;

import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author jpescola
 */
public class Sudoku extends javax.swing.JFrame {

    // armazena os labels do tabuleiro
    private final JLabel[] celulas;

    // armazena as posições de cada bloco 3x3
    private final int[][] blocos = {
        new int[]{0, 1, 2, 9, 10, 11, 18, 19, 20}, // primeiro bloco
        new int[]{3, 4, 5, 12, 13, 14, 21, 22, 23}, // segundo bloco
        new int[]{6, 7, 8, 15, 16, 17, 24, 25, 26}, // terceiro bloco
        new int[]{27, 28, 29, 36, 37, 38, 45, 46, 47}, // quarto bloco
        new int[]{30, 31, 32, 39, 40, 41, 48, 49, 50}, // quinto bloco
        new int[]{33, 34, 35, 42, 43, 44, 51, 52, 53}, // sexto bloco
        new int[]{54, 55, 56, 63, 64, 65, 72, 73, 74}, // sétimo bloco
        new int[]{57, 58, 59, 66, 67, 68, 75, 76, 77}, // oitavo bloco
        new int[]{60, 61, 62, 69, 70, 71, 78, 79, 80}, // nono bloco
    };

    /**
     * Creates new form Sudoku
     */
    public Sudoku() {
        initComponents();
        celulas = new JLabel[]{q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17, q18, q19, q20, q21, q22, q23, q24, q25, q26, q27, q28, q29, q30, q31, q32, q33, q34, q35, q36, q37, q38, q39, q40, q41, q42, q43, q44, q45, q46, q47, q48, q49, q50, q51, q52, q53, q54, q55, q56, q57, q58, q59, q60, q61, q62, q63, q64, q65, q66, q67, q68, q69, q70, q71, q72, q73, q74, q75, q76, q77, q78, q79, q80};
        novo();
        preencher(); // debug
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        q0 = new javax.swing.JLabel();
        q1 = new javax.swing.JLabel();
        q2 = new javax.swing.JLabel();
        q3 = new javax.swing.JLabel();
        q4 = new javax.swing.JLabel();
        q5 = new javax.swing.JLabel();
        q6 = new javax.swing.JLabel();
        q7 = new javax.swing.JLabel();
        q8 = new javax.swing.JLabel();
        q9 = new javax.swing.JLabel();
        q10 = new javax.swing.JLabel();
        q11 = new javax.swing.JLabel();
        q12 = new javax.swing.JLabel();
        q13 = new javax.swing.JLabel();
        q14 = new javax.swing.JLabel();
        q15 = new javax.swing.JLabel();
        q16 = new javax.swing.JLabel();
        q17 = new javax.swing.JLabel();
        q18 = new javax.swing.JLabel();
        q19 = new javax.swing.JLabel();
        q20 = new javax.swing.JLabel();
        q21 = new javax.swing.JLabel();
        q22 = new javax.swing.JLabel();
        q23 = new javax.swing.JLabel();
        q24 = new javax.swing.JLabel();
        q25 = new javax.swing.JLabel();
        q26 = new javax.swing.JLabel();
        q27 = new javax.swing.JLabel();
        q28 = new javax.swing.JLabel();
        q29 = new javax.swing.JLabel();
        q30 = new javax.swing.JLabel();
        q31 = new javax.swing.JLabel();
        q32 = new javax.swing.JLabel();
        q33 = new javax.swing.JLabel();
        q34 = new javax.swing.JLabel();
        q35 = new javax.swing.JLabel();
        q36 = new javax.swing.JLabel();
        q37 = new javax.swing.JLabel();
        q38 = new javax.swing.JLabel();
        q39 = new javax.swing.JLabel();
        q40 = new javax.swing.JLabel();
        q41 = new javax.swing.JLabel();
        q42 = new javax.swing.JLabel();
        q43 = new javax.swing.JLabel();
        q44 = new javax.swing.JLabel();
        q45 = new javax.swing.JLabel();
        q46 = new javax.swing.JLabel();
        q47 = new javax.swing.JLabel();
        q48 = new javax.swing.JLabel();
        q49 = new javax.swing.JLabel();
        q50 = new javax.swing.JLabel();
        q51 = new javax.swing.JLabel();
        q52 = new javax.swing.JLabel();
        q53 = new javax.swing.JLabel();
        q54 = new javax.swing.JLabel();
        q55 = new javax.swing.JLabel();
        q56 = new javax.swing.JLabel();
        q57 = new javax.swing.JLabel();
        q58 = new javax.swing.JLabel();
        q59 = new javax.swing.JLabel();
        q60 = new javax.swing.JLabel();
        q61 = new javax.swing.JLabel();
        q62 = new javax.swing.JLabel();
        q63 = new javax.swing.JLabel();
        q64 = new javax.swing.JLabel();
        q65 = new javax.swing.JLabel();
        q66 = new javax.swing.JLabel();
        q67 = new javax.swing.JLabel();
        q68 = new javax.swing.JLabel();
        q69 = new javax.swing.JLabel();
        q70 = new javax.swing.JLabel();
        q71 = new javax.swing.JLabel();
        q72 = new javax.swing.JLabel();
        q73 = new javax.swing.JLabel();
        q74 = new javax.swing.JLabel();
        q75 = new javax.swing.JLabel();
        q76 = new javax.swing.JLabel();
        q77 = new javax.swing.JLabel();
        q78 = new javax.swing.JLabel();
        q79 = new javax.swing.JLabel();
        q80 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sudoku");
        setResizable(false);

        q0.setBackground(new java.awt.Color(204, 255, 204));
        q0.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q0.setText("9");
        q0.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q0.setOpaque(true);
        q0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q1.setBackground(new java.awt.Color(204, 255, 204));
        q1.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q1.setText("9");
        q1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q1.setOpaque(true);
        q1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q2.setBackground(new java.awt.Color(204, 255, 204));
        q2.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q2.setText("9");
        q2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q2.setOpaque(true);
        q2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q3.setBackground(new java.awt.Color(204, 204, 255));
        q3.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q3.setText("9");
        q3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q3.setOpaque(true);
        q3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q4.setBackground(new java.awt.Color(204, 204, 255));
        q4.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q4.setText("9");
        q4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q4.setOpaque(true);
        q4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q5.setBackground(new java.awt.Color(204, 204, 255));
        q5.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q5.setText("9");
        q5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q5.setOpaque(true);
        q5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q6.setBackground(new java.awt.Color(204, 255, 204));
        q6.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q6.setText("9");
        q6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q6.setOpaque(true);
        q6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q7.setBackground(new java.awt.Color(204, 255, 204));
        q7.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q7.setText("9");
        q7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q7.setOpaque(true);
        q7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q8.setBackground(new java.awt.Color(204, 255, 204));
        q8.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q8.setText("9");
        q8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q8.setOpaque(true);
        q8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q9.setBackground(new java.awt.Color(204, 255, 204));
        q9.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q9.setText("9");
        q9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q9.setOpaque(true);
        q9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q10.setBackground(new java.awt.Color(204, 255, 204));
        q10.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q10.setText("9");
        q10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q10.setOpaque(true);
        q10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q11.setBackground(new java.awt.Color(204, 255, 204));
        q11.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q11.setText("9");
        q11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q11.setOpaque(true);
        q11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q12.setBackground(new java.awt.Color(204, 204, 255));
        q12.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q12.setText("9");
        q12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q12.setOpaque(true);
        q12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q13.setBackground(new java.awt.Color(204, 204, 255));
        q13.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q13.setText("9");
        q13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q13.setOpaque(true);
        q13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q14.setBackground(new java.awt.Color(204, 204, 255));
        q14.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q14.setText("9");
        q14.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q14.setOpaque(true);
        q14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q15.setBackground(new java.awt.Color(204, 255, 204));
        q15.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q15.setText("9");
        q15.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q15.setOpaque(true);
        q15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q16.setBackground(new java.awt.Color(204, 255, 204));
        q16.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q16.setText("9");
        q16.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q16.setOpaque(true);
        q16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q17.setBackground(new java.awt.Color(204, 255, 204));
        q17.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q17.setText("9");
        q17.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q17.setOpaque(true);
        q17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q18.setBackground(new java.awt.Color(204, 255, 204));
        q18.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q18.setText("9");
        q18.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q18.setOpaque(true);
        q18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q19.setBackground(new java.awt.Color(204, 255, 204));
        q19.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q19.setText("9");
        q19.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q19.setOpaque(true);
        q19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q20.setBackground(new java.awt.Color(204, 255, 204));
        q20.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q20.setText("9");
        q20.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q20.setOpaque(true);
        q20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q21.setBackground(new java.awt.Color(204, 204, 255));
        q21.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q21.setText("9");
        q21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q21.setOpaque(true);
        q21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q22.setBackground(new java.awt.Color(204, 204, 255));
        q22.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q22.setText("9");
        q22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q22.setOpaque(true);
        q22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q23.setBackground(new java.awt.Color(204, 204, 255));
        q23.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q23.setText("9");
        q23.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q23.setOpaque(true);
        q23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q24.setBackground(new java.awt.Color(204, 255, 204));
        q24.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q24.setText("9");
        q24.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q24.setOpaque(true);
        q24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q25.setBackground(new java.awt.Color(204, 255, 204));
        q25.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q25.setText("9");
        q25.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q25.setOpaque(true);
        q25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q26.setBackground(new java.awt.Color(204, 255, 204));
        q26.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q26.setText("9");
        q26.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q26.setOpaque(true);
        q26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q27.setBackground(new java.awt.Color(204, 204, 255));
        q27.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q27.setText("9");
        q27.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q27.setOpaque(true);
        q27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q28.setBackground(new java.awt.Color(204, 204, 255));
        q28.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q28.setText("9");
        q28.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q28.setOpaque(true);
        q28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q29.setBackground(new java.awt.Color(204, 204, 255));
        q29.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q29.setText("9");
        q29.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q29.setOpaque(true);
        q29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q30.setBackground(new java.awt.Color(204, 255, 204));
        q30.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q30.setText("9");
        q30.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q30.setOpaque(true);
        q30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q31.setBackground(new java.awt.Color(204, 255, 204));
        q31.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q31.setText("9");
        q31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q31.setOpaque(true);
        q31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q32.setBackground(new java.awt.Color(204, 255, 204));
        q32.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q32.setText("9");
        q32.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q32.setOpaque(true);
        q32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q33.setBackground(new java.awt.Color(204, 204, 255));
        q33.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q33.setText("9");
        q33.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q33.setOpaque(true);
        q33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q34.setBackground(new java.awt.Color(204, 204, 255));
        q34.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q34.setText("9");
        q34.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q34.setOpaque(true);
        q34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q35.setBackground(new java.awt.Color(204, 204, 255));
        q35.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q35.setText("9");
        q35.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q35.setOpaque(true);
        q35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q36.setBackground(new java.awt.Color(204, 204, 255));
        q36.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q36.setText("9");
        q36.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q36.setOpaque(true);
        q36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q37.setBackground(new java.awt.Color(204, 204, 255));
        q37.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q37.setText("9");
        q37.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q37.setOpaque(true);
        q37.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q38.setBackground(new java.awt.Color(204, 204, 255));
        q38.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q38.setText("9");
        q38.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q38.setOpaque(true);
        q38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q39.setBackground(new java.awt.Color(204, 255, 204));
        q39.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q39.setText("9");
        q39.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q39.setOpaque(true);
        q39.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q40.setBackground(new java.awt.Color(204, 255, 204));
        q40.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q40.setText("9");
        q40.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q40.setOpaque(true);
        q40.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q41.setBackground(new java.awt.Color(204, 255, 204));
        q41.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q41.setText("9");
        q41.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q41.setOpaque(true);
        q41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q42.setBackground(new java.awt.Color(204, 204, 255));
        q42.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q42.setText("9");
        q42.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q42.setOpaque(true);
        q42.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q43.setBackground(new java.awt.Color(204, 204, 255));
        q43.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q43.setText("9");
        q43.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q43.setOpaque(true);
        q43.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q44.setBackground(new java.awt.Color(204, 204, 255));
        q44.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q44.setText("9");
        q44.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q44.setOpaque(true);
        q44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q45.setBackground(new java.awt.Color(204, 204, 255));
        q45.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q45.setText("9");
        q45.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q45.setOpaque(true);
        q45.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q46.setBackground(new java.awt.Color(204, 204, 255));
        q46.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q46.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q46.setText("9");
        q46.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q46.setOpaque(true);
        q46.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q47.setBackground(new java.awt.Color(204, 204, 255));
        q47.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q47.setText("9");
        q47.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q47.setOpaque(true);
        q47.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q48.setBackground(new java.awt.Color(204, 255, 204));
        q48.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q48.setText("9");
        q48.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q48.setOpaque(true);
        q48.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q49.setBackground(new java.awt.Color(204, 255, 204));
        q49.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q49.setText("9");
        q49.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q49.setOpaque(true);
        q49.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q50.setBackground(new java.awt.Color(204, 255, 204));
        q50.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q50.setText("9");
        q50.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q50.setOpaque(true);
        q50.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q51.setBackground(new java.awt.Color(204, 204, 255));
        q51.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q51.setText("9");
        q51.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q51.setOpaque(true);
        q51.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q52.setBackground(new java.awt.Color(204, 204, 255));
        q52.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q52.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q52.setText("9");
        q52.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q52.setOpaque(true);
        q52.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q53.setBackground(new java.awt.Color(204, 204, 255));
        q53.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q53.setText("9");
        q53.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q53.setOpaque(true);
        q53.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q54.setBackground(new java.awt.Color(204, 255, 204));
        q54.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q54.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q54.setText("9");
        q54.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q54.setOpaque(true);
        q54.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q55.setBackground(new java.awt.Color(204, 255, 204));
        q55.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q55.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q55.setText("9");
        q55.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q55.setOpaque(true);
        q55.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q56.setBackground(new java.awt.Color(204, 255, 204));
        q56.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q56.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q56.setText("9");
        q56.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q56.setOpaque(true);
        q56.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q57.setBackground(new java.awt.Color(204, 204, 255));
        q57.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q57.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q57.setText("9");
        q57.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q57.setOpaque(true);
        q57.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q58.setBackground(new java.awt.Color(204, 204, 255));
        q58.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q58.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q58.setText("9");
        q58.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q58.setOpaque(true);
        q58.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q59.setBackground(new java.awt.Color(204, 204, 255));
        q59.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q59.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q59.setText("9");
        q59.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q59.setOpaque(true);
        q59.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q60.setBackground(new java.awt.Color(204, 255, 204));
        q60.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q60.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q60.setText("9");
        q60.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q60.setOpaque(true);
        q60.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q61.setBackground(new java.awt.Color(204, 255, 204));
        q61.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q61.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q61.setText("9");
        q61.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q61.setOpaque(true);
        q61.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q62.setBackground(new java.awt.Color(204, 255, 204));
        q62.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q62.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q62.setText("9");
        q62.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q62.setOpaque(true);
        q62.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q63.setBackground(new java.awt.Color(204, 255, 204));
        q63.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q63.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q63.setText("9");
        q63.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q63.setOpaque(true);
        q63.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q64.setBackground(new java.awt.Color(204, 255, 204));
        q64.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q64.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q64.setText("9");
        q64.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q64.setOpaque(true);
        q64.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q65.setBackground(new java.awt.Color(204, 255, 204));
        q65.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q65.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q65.setText("9");
        q65.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q65.setOpaque(true);
        q65.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q66.setBackground(new java.awt.Color(204, 204, 255));
        q66.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q66.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q66.setText("9");
        q66.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q66.setOpaque(true);
        q66.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q67.setBackground(new java.awt.Color(204, 204, 255));
        q67.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q67.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q67.setText("9");
        q67.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q67.setOpaque(true);
        q67.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q68.setBackground(new java.awt.Color(204, 204, 255));
        q68.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q68.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q68.setText("9");
        q68.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q68.setOpaque(true);
        q68.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q69.setBackground(new java.awt.Color(204, 255, 204));
        q69.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q69.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q69.setText("9");
        q69.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q69.setOpaque(true);
        q69.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q70.setBackground(new java.awt.Color(204, 255, 204));
        q70.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q70.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q70.setText("9");
        q70.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q70.setOpaque(true);
        q70.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q71.setBackground(new java.awt.Color(204, 255, 204));
        q71.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q71.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q71.setText("9");
        q71.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q71.setOpaque(true);
        q71.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q72.setBackground(new java.awt.Color(204, 255, 204));
        q72.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q72.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q72.setText("9");
        q72.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q72.setOpaque(true);
        q72.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q73.setBackground(new java.awt.Color(204, 255, 204));
        q73.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q73.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q73.setText("9");
        q73.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q73.setOpaque(true);
        q73.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q74.setBackground(new java.awt.Color(204, 255, 204));
        q74.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q74.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q74.setText("9");
        q74.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q74.setOpaque(true);
        q74.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q75.setBackground(new java.awt.Color(204, 204, 255));
        q75.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q75.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q75.setText("9");
        q75.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q75.setOpaque(true);
        q75.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q76.setBackground(new java.awt.Color(204, 204, 255));
        q76.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q76.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q76.setText("9");
        q76.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q76.setOpaque(true);
        q76.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q77.setBackground(new java.awt.Color(204, 204, 255));
        q77.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q77.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q77.setText("9");
        q77.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q77.setOpaque(true);
        q77.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q78.setBackground(new java.awt.Color(204, 255, 204));
        q78.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q78.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q78.setText("9");
        q78.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q78.setOpaque(true);
        q78.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q79.setBackground(new java.awt.Color(204, 255, 204));
        q79.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q79.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q79.setText("9");
        q79.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q79.setOpaque(true);
        q79.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        q80.setBackground(new java.awt.Color(204, 255, 204));
        q80.setFont(new java.awt.Font("Liberation Sans", 0, 48)); // NOI18N
        q80.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        q80.setText("9");
        q80.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        q80.setOpaque(true);
        q80.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meuEvento(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(q0, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(q9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q17, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(q18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q19, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q20, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q21, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q22, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q23, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q24, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q25, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q26, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(q27, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q28, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q29, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q30, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q31, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q32, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q33, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q34, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q35, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(q36, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q37, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q38, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q39, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q40, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q41, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q42, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q43, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q44, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(q45, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q46, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q47, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q48, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q49, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q50, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q51, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q52, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q53, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(q54, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q55, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q56, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q57, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q58, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q59, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q60, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q61, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q62, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(q63, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q64, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q65, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q66, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q67, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q68, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q69, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q70, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q71, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(q72, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q73, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q74, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q75, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q76, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q77, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q78, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q79, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q80, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(q0, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(q9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q17, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(q18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q19, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q20, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q21, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q22, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q23, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q24, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q25, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q26, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(q27, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q28, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q29, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q30, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q31, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q32, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q33, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q34, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q35, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(q36, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q37, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q38, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q39, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q40, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q41, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q42, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q43, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q44, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(q45, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q46, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q47, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q48, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q49, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q50, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q51, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q52, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q53, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(q54, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q55, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q56, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q57, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q58, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q59, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q60, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q61, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q62, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(q63, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q64, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q65, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q66, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q67, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q68, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q69, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q70, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q71, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(q72, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q73, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q74, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q75, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q76, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q77, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q78, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q79, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q80, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void meuEvento(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_meuEvento
        jogar(evt);
    }//GEN-LAST:event_meuEvento

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sudoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sudoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sudoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sudoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sudoku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel q0;
    private javax.swing.JLabel q1;
    private javax.swing.JLabel q10;
    private javax.swing.JLabel q11;
    private javax.swing.JLabel q12;
    private javax.swing.JLabel q13;
    private javax.swing.JLabel q14;
    private javax.swing.JLabel q15;
    private javax.swing.JLabel q16;
    private javax.swing.JLabel q17;
    private javax.swing.JLabel q18;
    private javax.swing.JLabel q19;
    private javax.swing.JLabel q2;
    private javax.swing.JLabel q20;
    private javax.swing.JLabel q21;
    private javax.swing.JLabel q22;
    private javax.swing.JLabel q23;
    private javax.swing.JLabel q24;
    private javax.swing.JLabel q25;
    private javax.swing.JLabel q26;
    private javax.swing.JLabel q27;
    private javax.swing.JLabel q28;
    private javax.swing.JLabel q29;
    private javax.swing.JLabel q3;
    private javax.swing.JLabel q30;
    private javax.swing.JLabel q31;
    private javax.swing.JLabel q32;
    private javax.swing.JLabel q33;
    private javax.swing.JLabel q34;
    private javax.swing.JLabel q35;
    private javax.swing.JLabel q36;
    private javax.swing.JLabel q37;
    private javax.swing.JLabel q38;
    private javax.swing.JLabel q39;
    private javax.swing.JLabel q4;
    private javax.swing.JLabel q40;
    private javax.swing.JLabel q41;
    private javax.swing.JLabel q42;
    private javax.swing.JLabel q43;
    private javax.swing.JLabel q44;
    private javax.swing.JLabel q45;
    private javax.swing.JLabel q46;
    private javax.swing.JLabel q47;
    private javax.swing.JLabel q48;
    private javax.swing.JLabel q49;
    private javax.swing.JLabel q5;
    private javax.swing.JLabel q50;
    private javax.swing.JLabel q51;
    private javax.swing.JLabel q52;
    private javax.swing.JLabel q53;
    private javax.swing.JLabel q54;
    private javax.swing.JLabel q55;
    private javax.swing.JLabel q56;
    private javax.swing.JLabel q57;
    private javax.swing.JLabel q58;
    private javax.swing.JLabel q59;
    private javax.swing.JLabel q6;
    private javax.swing.JLabel q60;
    private javax.swing.JLabel q61;
    private javax.swing.JLabel q62;
    private javax.swing.JLabel q63;
    private javax.swing.JLabel q64;
    private javax.swing.JLabel q65;
    private javax.swing.JLabel q66;
    private javax.swing.JLabel q67;
    private javax.swing.JLabel q68;
    private javax.swing.JLabel q69;
    private javax.swing.JLabel q7;
    private javax.swing.JLabel q70;
    private javax.swing.JLabel q71;
    private javax.swing.JLabel q72;
    private javax.swing.JLabel q73;
    private javax.swing.JLabel q74;
    private javax.swing.JLabel q75;
    private javax.swing.JLabel q76;
    private javax.swing.JLabel q77;
    private javax.swing.JLabel q78;
    private javax.swing.JLabel q79;
    private javax.swing.JLabel q8;
    private javax.swing.JLabel q80;
    private javax.swing.JLabel q9;
    // End of variables declaration//GEN-END:variables

    private void novo() {
        limpar();

        int n = 1;
        int inicio = (int) (Math.random() * 10); // sorteia uma posição
        int shift = 12; // número de casas a pular

        // percorre o vetor de labels, preenchendo com valores iniciais
        for (int i = inicio; i < 81; i += shift) {
            celulas[i].setText("" + (n++));
            celulas[i].setEnabled(false);
        }
    }

    private void limpar() {
        for (JLabel c : celulas) {
            c.setText("");
        }
    }

    private void jogar(MouseEvent evt) {
        JLabel c = (JLabel) evt.getSource(); // busca o label de origem
        if (!c.isEnabled()) {
            return;
        }

        // considera zero quando vazio
        if (c.getText().isEmpty()) {
            c.setText("0");
        }

        // armazena o valor da célula e soma de acordo com o botão
        int v = Integer.parseInt(c.getText());
        if (evt.getButton() == 1) { // botão esquerdo
            v += 1;
        } else if (evt.getButton() == 2) { // botão do meio
            v = 0;
        } else if (evt.getButton() == 3) { // botão direito
            v += 3;
        }

        // se passou de nove, volta a contagem
        if (v > 9) {
            v -= 9;
        }

        // mostra o valor se for maior que zero
        if (v > 0) {
            c.setText("" + v);
        } else {
            c.setText("");
        }

        // confere se o jogo acabou
        if (checkBlocos()) {
            bloquearTodos();
            JOptionPane.showMessageDialog(rootPane, "Game Over");
        }
    }

    private void bloquearTodos() {
        for (JLabel l : celulas) {
            l.setEnabled(false);
        }
    }

    // verifica se o usuário acertou o bloco, linha ou coluna
    private int check(int[] bloco) {
        int t = 0; // soma total dos valores do bloco (busca o 45)
//        HashSet<Integer> tmp = new HashSet<>(); // não permite repetição
        List<Integer> tmp = new ArrayList<>(); // lista temporaria de valores

        for (int i : bloco) {
            JLabel l = celulas[i]; // armazena a celula atual
            if (!l.getText().isEmpty()) { // se não for vazia
                int v = Integer.parseInt(l.getText()); // converte p/ inteiro
                if (tmp.contains(v)) { // se tem número repetido
                    break;
                }
                tmp.add(v); // inclui o valor atual na lista
                t += v; // soma o total
            } else { // tem celula vazia
                break;
            }
        }
        return t;

    }

    private boolean checkBlocos() {

        // confere as linhas
        if (!checkLines()) {
            return false;
        }

        // confere as colunas
        if (!checkColunas()) {
            return false;
        }

        // confere os blocos
        for (int[] bloco : blocos) {
            if (check(bloco) < 45) { // se algum ainda não foi completado
                return false;
            }
        }
        return true;
    }

    private boolean checkColunas() {

        int inicio = 0;
        do {
            int v = inicio;

            // monta o bloco da coluna a partir do valor de início
            int[] bloco = new int[9];
            for (int i = 0; i < 9; i++) {
                bloco[i] = v;
                v += 9; // de nove em nove
            }

            // verifica a soma total
            if (check(bloco) < 45) {
                return false; // bloco não está completo
            }

            inicio++; // início da próxima coluna

        } while (inicio <= 8);

        return true;
    }

    private boolean checkLines() {

        int inicio = 0;
        do {
            int v = inicio;

            // monta o bloco da linha a partir do valor de início
            int[] bloco = new int[9];
            for (int i = 0; i < 9; i++) {
                bloco[i] = v;
                v++;
            }

            // verifica a soma total 
//            if (check(IntStream.range(inicio, inicio + 9).toArray()) < 45) {
            if (check(bloco) < 45) {
                return false; // bloco não está completo
            }

            inicio += 9; // início da próxima linha

        } while (inicio <= 72);

        return true;
    }

    // debug
    private void preencher() {

        int[] solucao = new int[]{
            3, 4, 5, 6, 8, 7, 2, 1, 9,
            6, 1, 9, 3, 2, 4, 7, 8, 5,
            7, 2, 8, 1, 5, 9, 4, 6, 3,
            1, 6, 2, 4, 3, 8, 9, 5, 7,
            9, 3, 7, 5, 1, 6, 8, 4, 2,
            5, 8, 4, 7, 9, 2, 1, 3, 6,
            4, 5, 3, 9, 7, 1, 6, 2, 8,
            2, 7, 1, 8, 6, 3, 5, 9, 4,
            8, 9, 6, 2, 4, 5, 3, 7, 1,};

        for (int i = 0; i < 81; i++) {
            celulas[i].setText("" + solucao[i]);
        }

    }

}
