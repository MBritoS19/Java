/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.CadastroController;
import controller.TipoController;
import java.awt.event.ItemEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Tipo;
import model.Cadastro;

/**
 *
 * @author JP
 */
public class CadastrosView extends javax.swing.JFrame {

    Tipo tipo = null;
    Cadastro cadastro = new Cadastro();
    List<Tipo> tipos;
    List<Cadastro> cadastros;
    
   
    /**
     * Creates new form EstadoView
     */
    public CadastrosView() {
        initComponents();
        iniciar();
        loadCombo();
        loadTabela();
    }
    
    
    public static void iniciar() {

        try {

            // definindo os controllers
            TipoController fc = new TipoController();
            CadastroController pc = new CadastroController();

            // cadastrando fabricantes
            fc.salvar(new Tipo(0, "Administrador"));
            fc.salvar(new Tipo(0, "Produção"));
            fc.salvar(new Tipo(0, "teste"));

            // buscando
            List<Tipo> fabricantes = fc.listar();
            Tipo Administrador = fabricantes.get(0);
            Tipo Producao = fabricantes.get(1);
            Tipo Teste = fabricantes.get(2);

            // cadastrando produtos
            pc.salvar(new Cadastro(0, "teste1", "teste1", "123", Administrador));
            pc.salvar(new Cadastro(0, "teste2", "teste2", "1234", Producao));
            pc.salvar(new Cadastro(0, "teste3", "teste3", "12345", Teste));

            // listando fabricantes
            System.out.println(Administrador.getNome());

            // listando produtos
            for (Cadastro p : pc.listar()) {
                System.out.println(p.getNome());
            }

            // outra forma de listar produtos
            for (Cadastro p : Administrador.getCadastro()) {
                System.out.println(p.getNome());
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        cmbTipos = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCadastros = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        btnEstado = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtLogin = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSenha = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Login");

        cmbTipos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbTipos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTiposItemStateChanged(evt);
            }
        });

        jLabel1.setText("Tipo:");

        tblCadastros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Nome", "Login", "Senha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblCadastros.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblCadastros.setEditingColumn(0);
        tblCadastros.setEditingRow(0);
        tblCadastros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCadastrosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCadastros);

        jLabel2.setText("Nome:");

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/novos/diskette.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnEstado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/novos/circle.png"))); // NOI18N
        btnEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstadoActionPerformed(evt);
            }
        });

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/novos/paper.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/novos/delete.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jLabel3.setText("Login:");

        jLabel4.setText("Senha:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 973, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtNome, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbTipos, javax.swing.GroupLayout.Alignment.LEADING, 0, 264, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(cmbTipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnNovo)
                    .addComponent(btnExcluir))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblCadastrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCadastrosMouseClicked
        loadCadastros();
    }//GEN-LAST:event_tblCadastrosMouseClicked

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        salvar();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void cmbTiposItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTiposItemStateChanged
        eventoCombo(evt);
    }//GEN-LAST:event_cmbTiposItemStateChanged

    private void btnEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstadoActionPerformed
        addEstado();
    }//GEN-LAST:event_btnEstadoActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        limpar();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        excluir();
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
////            javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel");
////            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
////                System.out.println(info);
////                if ("Metal".equals(info.getName())) {
////                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
////                    break;
////                }
////            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(CadastrosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(CadastrosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(CadastrosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(CadastrosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastrosView().setVisible(true);

            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEstado;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cmbTipos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCadastros;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtSenha;
    // End of variables declaration//GEN-END:variables

    private void loadCombo() {
        cmbTipos.removeAllItems(); // limpa o combo
        // atualiza o arraylist de tipos com os dados do bd
        tipos = new TipoController().listar();
        if (!tipos.isEmpty()) { // caso existam tipos cadastrados
            if (tipo == null) {
                tipo = tipos.get(0); // define o objeto tipo
            }
            // adiciona os cadastros dos tipos no combo
            for (Tipo f : tipos) { // percorre o arraylist de tipos
                cmbTipos.addItem(f.getNome()); // adiciona o cadastro do tipo ao combo
            }
        }
    }

    private void loadTabela() {
        // armazena os cadastros cadastrados no banco
        cadastros = tipo.getCadastro();

        // define as colunas da tabela
        String[] colunas = new String[]{"Id", "Nome", "Login", "Senha"};
        // define a matriz que armazenará os dados da tabela
        String[][] linhas = new String[cadastros.size()][colunas.length];

        // percorre o arraylist de cadastros e preenche a matriz
        for (int i = 0; i < cadastros.size(); i++) {
            linhas[i][0] = cadastros.get(i).getId() + "";
            linhas[i][1] = cadastros.get(i).getNome() + "";
            linhas[i][2] = cadastros.get(i).getLogin() + "";
            linhas[i][3] = cadastros.get(i).getSenha() + "";
        }

        // cria um modelo de tabela
        DefaultTableModel modelo = new DefaultTableModel(linhas, colunas);
        tblCadastros.setModel(modelo); // vincula o modelo ao JTable
        tblCadastros.setDefaultEditor(Object.class, null); // desativa edição
    }

    private void loadCadastros() {
        // usa o número da linha clicada na tabela como índice do ArrayList 'cadastros'
        cadastro = cadastros.get(tblCadastros.getSelectedRow());

        txtNome.setText("" + cadastro.getNome()); // preenche o campo 'nome'
        txtLogin.setText("" + cadastro.getLogin()); // preenche o camo 'login'
        txtSenha.setText("" + cadastro.getSenha()); // preenche o camo 'senha'
        btnExcluir.setEnabled(true);
    }

    private void salvar() {
        try {
            cadastro.setNome(txtNome.getText()); // define o cadastro do cadastro
            cadastro.setLogin(txtLogin.getText()); // define o cadastro do cadastro
            cadastro.setSenha(txtSenha.getText()); // define o cadastro do cadastro
            cadastro.setTipo(tipo); // define o tipo do cadastro
            new CadastroController().salvar(cadastro); // salva o cadastro
            loadTabela(); // atualiza a tabela
            limpar(); // limpa o formulário
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void limpar() {
        cadastro = new Cadastro();
        btnExcluir.setEnabled(false);
        txtNome.setText("");
        txtLogin.setText("");
        txtSenha.setText("");
    }

    private void eventoCombo(ItemEvent evt) {
        // verifica se alguma opção foi selecionada
        if (evt.getStateChange() == ItemEvent.SELECTED && cmbTipos.getSelectedIndex() >= 0) {
            // busca o objeto tipo
            tipo = tipos.get(cmbTipos.getSelectedIndex());
            // atualiza a tabela
            loadTabela();
        }
    }

    private void addEstado() {
        // armazena o cadastro do novo tipo
        String nome = JOptionPane.showInputDialog(this, "Novo tipo", "nome", JOptionPane.INFORMATION_MESSAGE);
        // verifica se o cadastro não está vazio
        if (!nome.isEmpty()) {
            // salva o novo tipo
            new TipoController().salvar(new Tipo(0, nome));
            // atualiza o JComboBox
            loadCombo();
        }
    }

    private void excluir() {
        new CadastroController().excluir(cadastro); // exclui o cadastro definido no método loadCadastros
        cadastros.remove(cadastro); // remove também do arraylist
        loadTabela(); // atualiza a tabela
        limpar(); // limpa o formulário
        btnExcluir.setEnabled(false);
    }
}

















